listen_addresses: "0.0.0.0:3000"
base_path: /tiles
worker_processes: 8
preferred_encoding: gzip
default_srid: 4269
max_feature_count: 500
postgres:
  connection_string: ${DATABASE_URL}
  functions:
    # layer with a series of stands, given a treatment_plan_id
    # parameters:
    # - treatment_plan_id: int
    # - project_area_id: Optional[int]
    stands_by_tx_plan:
      schema: public
      function: martin_stands_by_tx_plan
      minzoom: 0
      maxzoom: 20
      bounds: [ -180.0, -90.0, 180.0, 90.0 ]
      id_column: id
    # layer with a series of stands and treatment results' value and baseline,
    # given a treatment_plan_id and variable
    # parameters:
    # - treatment_plan_id: int
    # - variable: string
    # - project_area_id: Optional[int]
    stands_by_tx_result:
      schema: public
      function: martin_stands_by_tx_result
      minzoom: 0
      maxzoom: 20
      bounds: [ -180.0, -90.0, 180.0, 90.0 ]
      id_column: id
    # layer with the project area outline. This unions all stands
    # that compose the project are and creates a single multi polygon.
    # this layer changes the shape of the project area to conform to
    # the underlying stands.
    # parameters:
    # - project_area_id: int
    project_area_aggregate:
      schema: public
      function: martin_project_area_aggregate
      minzoom: 0
      maxzoom: 20
      bounds: [ -180.0, -90.0, 180.0, 90.0 ]
      id_column: id
    # layer with project areas. This layer shows original project
    # areas, as imported or generated by any algorithm.
    # parameters:
    # - scenario_id: int
    project_areas_by_scenario:
      schema: public
      function: martin_project_areas_by_scenario
      minzoom: 0
      maxzoom: 20
      bounds: [ -180.0, -90.0, 180.0, 90.0 ]
      id_column: id
    # layer with planning area geometry.
    # parameters:
    # - id: int
    planning_area_by_id:
      schema: public
      function: martin_planning_area
      minzoom: 0
      maxzoom: 20
      bounds: [ -180.0, -90.0, 180.0, 90.0 ]
      id_column: id
    # dynamic layer that can serve ANY table as tiles
    # parameters:
    # - layer: string  (full table name, e.g. public.my_table) 
    dynamic_layer:
      schema: public                 
      function: martin_dynamic_layer 
      minzoom: 0
      maxzoom: 20
      bounds: [ -180.0, -90.0, 180.0, 90.0 ]
      id_column: id                  
      query_params: [ layer ]    
  tables:
    stands:
      layer_id: stands
      schema: public
      table: stands_stand
      srid: 4269
      geometry_column: geometry
      id_column: id
      minzoom: 0
      maxzoom: 20
      bounds: [ -180.0, -90.0, 180.0, 90.0 ]
      geometry_type: POLYGON
      properties:
        id: int8
        size: string
