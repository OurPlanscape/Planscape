# Generated by Django 4.2.21 on 2025-09-18 20:16

from django.db import migrations
from django.db.models import Q

BATCH_UPDATE_SIZE = 5_000
FETCH_CHUNK_SIZE = 10_000
CAPABILITIES_VALUE = ["FORSYS", "IMPACTS"]


def backfill_capabilities(apps, schema_editor):
    Scenario = apps.get_model("planning", "Scenario")
    scenarios_missing_caps = (
        Scenario.objects
        .filter(deleted_at__isnull=True)
        .filter(
            Q(capabilities__isnull=True)
            | Q(capabilities=[])
        )
        .order_by("pk")
        .values_list("pk", flat=True)
    )

    batch_ids = []

    for scenario_pk in scenarios_missing_caps.iterator(chunk_size=FETCH_CHUNK_SIZE):
        batch_ids.append(scenario_pk)
        if len(batch_ids) >= BATCH_UPDATE_SIZE:
            Scenario.objects.filter(pk__in=batch_ids).update(
                capabilities=CAPABILITIES_VALUE
            )
            batch_ids = []

    if batch_ids:
        Scenario.objects.filter(pk__in=batch_ids).update(
            capabilities=CAPABILITIES_VALUE
        )


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("planning", "0054_alter_treatmentgoalusesdatalayer_usage_type"),
    ]

    operations = [
        migrations.RunPython(backfill_capabilities, migrations.RunPython.noop),
    ]
