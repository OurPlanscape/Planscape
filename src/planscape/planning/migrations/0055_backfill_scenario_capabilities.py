# Generated by Django 4.2.21 on 2025-09-18 20:16

from django.db import migrations
from django.db.models import Q
from itertools import batched

ROW_FETCH_CHUNK_SIZE = 10_000
ROW_UPDATE_BATCH_SIZE = 5_000
DEFAULT_CAPABILITIES_VALUE = ["FORSYS", "IMPACTS"]


def backfill_capabilities(apps, schema_editor):
    Scenario = apps.get_model("planning", "Scenario")

    scenario_id_iterator = (
        Scenario.dead_or_alive
        .filter(Q(capabilities__isnull=True) | Q(capabilities=[]))
        .order_by("pk")
        .values_list("pk", flat=True)
        .iterator(chunk_size=ROW_FETCH_CHUNK_SIZE)
    )

    for scenario_id_batch in batched(scenario_id_iterator, ROW_UPDATE_BATCH_SIZE):
        Scenario.dead_or_alive.filter(pk__in=scenario_id_batch).update(
            capabilities=DEFAULT_CAPABILITIES_VALUE
        )


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("planning", "0054_alter_treatmentgoalusesdatalayer_usage_type"),
    ]

    operations = [
        migrations.RunPython(backfill_capabilities, migrations.RunPython.noop),
    ]