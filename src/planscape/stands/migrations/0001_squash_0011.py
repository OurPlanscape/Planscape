# Generated by Django 4.2.21 on 2025-07-24 18:58

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("stands", "0001_initial"),
        ("stands", "0002_auto_20230816_1812"),
        ("stands", "0003_create_200ha_stands"),
        ("stands", "0004_auto_20230821_1342"),
        ("stands", "0005_auto_20230823_1535"),
        ("stands", "0006_standmetric_majority_standmetric_minority"),
        ("stands", "0007_alter_stand_created_at_alter_standmetric_created_at"),
        ("stands", "0008_standmetric_datalayer_alter_standmetric_condition"),
        ("stands", "0009_remove_standmetric_unique_stand_metric_and_more"),
        ("stands", "0010_alter_stand_size"),
        ("stands", "0011_remove_standmetric_condition"),
    ]

    initial = True

    dependencies = [
        ("datasets", "0006_alter_datalayer_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="Stand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("SMALL", "Small"),
                            ("MEDIUM", "Medium"),
                            ("LARGE", "Large"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.PolygonField(srid=4269),
                ),
                ("area_m2", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="StandMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("min", models.FloatField(null=True)),
                ("avg", models.FloatField(null=True)),
                ("max", models.FloatField(null=True)),
                ("sum", models.FloatField(null=True)),
                ("count", models.IntegerField(null=True)),
                (
                    "stand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="stands.stand",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="stand",
            index=models.Index(fields=["size"], name="stand_size_index"),
        ),
        migrations.RunSQL(
            sql='CREATE OR REPLACE FUNCTION create_stands(\n\t\textent geometry,\n\t\thex_length float,\n\t\tsize_indicator varchar,\n\t\tclean bool\n\t) RETURNS int AS $$\nDECLARE\n\tmy_timestamp timestamp := timezone(\'utc\', now());\nBEGIN\n\tIF clean THEN\n\t\tDELETE FROM stands_stand ss\n\t\tWHERE size = size_indicator;\n\tEND IF;\n\n\tINSERT INTO stands_stand (created_at, size, geometry, area_m2) (\n\t\tSELECT\n\t\t\tmy_timestamp AS "created_at",\n\t\t\tsize_indicator AS "size",\n\t\t\tST_Transform(hex.geom, 4269) AS "geometry",\n\t\t\tROUND(ST_Area(hex.geom)::numeric, 2) AS "area_m2"\n\t\tFROM\n\t\t\tST_HexagonGrid(hex_length, extent) AS hex\n\t);\n\tRETURN (\n\t\tSELECT count(*)\n\t\tFROM stands_stand ss\n\t\tWHERE size = size_indicator\n\t);\nEND;\n$$ LANGUAGE plpgsql;',
            reverse_sql="DROP FUNCTION create_stands;",
        ),
        migrations.RunSQL(
            sql="SELECT * FROM\ncreate_stands(\n\tST_MakeEnvelope(\n\t\t-2356881.4306262177415192,\n\t\t 1242364.3072737671900541,\n\t\t-1646662.6679147812537849,\n\t\t 2452712.7869634097442031,\n\t\t 5070),\n\t877.38267558,\n\t'LARGE',\n\tTRUE\n);",
        ),
        migrations.AddField(
            model_name="standmetric",
            name="majority",
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name="standmetric",
            name="minority",
            field=models.FloatField(null=True),
        ),
        migrations.AlterField(
            model_name="stand",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name="standmetric",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="standmetric",
            name="datalayer",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="metrics",
                to="datasets.datalayer",
            ),
        ),
        migrations.AddConstraint(
            model_name="standmetric",
            constraint=models.UniqueConstraint(
                fields=("stand", "datalayer"), name="unique_stand_metric"
            ),
        ),
        migrations.AlterField(
            model_name="stand",
            name="size",
            field=models.CharField(
                choices=[("SMALL", "Small"), ("MEDIUM", "Medium"), ("LARGE", "Large")],
                db_index=True,
                max_length=16,
            ),
        ),
    ]
