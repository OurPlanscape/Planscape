
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// @import '~angular/material/theming';
// @import 'super-styles';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@import "app/shared/variables";

// Planscape palette, based on the $primary-color, generated with http://mcg.mbitson.com/
$planscape: (
  50 : #e7edfa,
  100 : #c2d1f3,
  200 : #99b3eb,
  300 : #7095e2,
  400 : #527edc,
  500 : $primary-color,
  600 : #2e5fd1,
  700 : #2754cc,
  800 : #204ac6,
  900 : #1439bc,
  A100 : #edf0ff,
  A200 : #bac7ff,
  A400 : #879dff,
  A700 : #6e88ff,
  contrast: (
          50 : #000000,
          100 : #000000,
          200 : #000000,
          300 : #000000,
          400 : #ffffff,
          500 : #ffffff,
          600 : #ffffff,
          700 : #ffffff,
          800 : #ffffff,
          900 : #ffffff,
          A100 : #000000,
          A200 : #000000,
          A400 : #000000,
          A700 : #000000,
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$planscape-frontend-primary: mat.define-palette($planscape);
$planscape-frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$planscape-frontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$planscape-frontend-theme: mat.define-light-theme((
  color: (
    primary: $planscape-frontend-primary,
    accent: $planscape-frontend-accent,
    warn: $planscape-frontend-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($planscape-frontend-theme);

/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/icon?family=Material+Icons|Material+Symbols+Outlined");

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.is-hidden {
  display: none !important;
}

.map-nameplate-tooltip {
  font-size: 14px;
}

.snackbar-error {
  background: $error-color;
  button {
    color: #ffffff;
  }
}

// Leaflet attribution box
.leaflet-control-attribution {
  max-width: calc(100% - 200px);
}

// Removes the box when a boundary is clicked. https://github.com/OurPlanscape/Planscape/issues/357
* {
  outline: none;
}

// Geoman drawing vertex styling
.marker-icon,
 .marker-icon:focus {
    border: 3px solid $primary-color;
    margin: -5px 0 0 -5px !important;
    width: 5px !important;
    height: 5px !important;
 }

// Must manually import leaflet draw css. https://github.com/Leaflet/Leaflet.draw/issues/617
@import '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css';
