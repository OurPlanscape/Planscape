@use '@angular/material' as mat;

@use 'sass:map';

// CUSTOM
// $primary-palette: (
//     50 : #e9e9e9,
//     100 : #c8c8c8,
//     200 : #a4a4a4,
//     300 : #808080,
//     400 : #646464,
//     500 : #494949,
//     600 : #424242,
//     700 : #393939,
//     800 : #313131,
//     900 : #212121,
//     A100 : #f17d7d,
//     A200 : #eb4f4f,
//     A400 : #ff0808,
//     A700 : #ee0000,
//     contrast: (
//         50 : #000000,
//         100 : #000000,
//         200 : #000000,
//         300 : #000000,
//         400 : #ffffff,
//         500 : #ffffff,
//         600 : #ffffff,
//         700 : #ffffff,
//         800 : #ffffff,
//         900 : #ffffff,
//         A100 : #000000,
//         A200 : #ffffff,
//         A400 : #ffffff,
//         A700 : #ffffff,
//     )
// );

// $secondary-palette: (
//     50 : #e7edfa,
//     100 : #c2d1f3,
//     200 : #99b3eb,
//     300 : #7095e2,
//     400 : #527edc,
//     500 : #3367d6,
//     600 : #2e5fd1,
//     700 : #2754cc,
//     800 : #204ac6,
//     900 : #1439bc,
//     A100 : #edf0ff,
//     A200 : #bac7ff,
//     A400 : #879dff,
//     A700 : #6e88ff,
//     contrast: (
//         50 : #000000,
//         100 : #000000,
//         200 : #000000,
//         300 : #000000,
//         400 : #ffffff,
//         500 : #ffffff,
//         600 : #ffffff,
//         700 : #ffffff,
//         800 : #ffffff,
//         900 : #ffffff,
//         A100 : #000000,
//         A200 : #000000,
//         A400 : #000000,
//         A700 : #000000,
//     )
// );


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$planscape-frontend-primary: mat.define-palette(mat.$indigo-palette);
$planscape-frontend-accent: mat.define-palette(
    mat.$pink-palette,
    A200,
    A100,
    A400
);

// The warn palette is optional (defaults to red).
$planscape-frontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$planscape-frontend-theme: mat.define-light-theme(
    (
      color: (
        primary: $planscape-frontend-primary,
        accent: $planscape-frontend-accent,
        warn: $planscape-frontend-warn,
      ),
    )
);

$color-config: mat.get-color-config($planscape-frontend-theme);
$primary-palette: map.get($color-config, 'primary');
$custom-typography: mat.define-typography-config(
  // base font family
  $font-family: '"Public Sans", sans-serif',
    // h1
  $headline: mat.define-typography-level(30px, 32px, 700),
    // h2
  $title: mat.define-typography-level(26px, 28px, 700),
    // h3
  $subheading-2: mat.define-typography-level(22px, 24px, 600),
  $subheading-1: mat.define-typography-level(18px, 24px, 600),
    // body main (baseline text)
  $body-1: mat.define-typography-level(14px, 20px, 400),
    // body secondary, regular paragraph
  $body-2: mat.define-typography-level(16px, 26px, 400),
    // button text
  $button: mat.define-typography-level(16px, 16px, 600),
    // input
  $input: mat.define-typography-level(16px, 1em, 500),
  $caption: mat.define-typography-level(12px, 22px, 400),
);


@include mat.core($custom-typography);
