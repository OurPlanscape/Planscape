version: "3.9"

services:
  _planscape:
    image: planscape
    command: ["echo", "build done"]
    build:
      context: ..
      dockerfile: docker/${DOCKERFILE:-Dockerfile}
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6380:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data/redis
  celery_worker:
    image: planscape
    extends:
      service: _planscape
    working_dir: /usr/src/app/src/planscape
    command: celery -A planscape worker -E --loglevel INFO --concurrency 3 -Q forsys,impacts,default
    deploy:
      replicas: 1
    env_file:
      - ../.env
    depends_on:
      - db
      - redis
    volumes:
      - .:/usr/src/app
  db:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology,postgis_raster,pgrouting
    volumes:
      - postgres:/data/postgres
    ports:
      - 5433:5432
    restart: unless-stopped
    command: -c fsync=off -c synchronous_commit=off -c full_page_writes=off
  martin:
    image: ghcr.io/maplibre/martin:v0.13.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db/postgres
    command: --config /usr/src/app/martin.yaml
    volumes:
      - .:/usr/src/app
  forsys:
    build:
      context: ..
      dockerfile: docker/Dockerfile.forsys
    ports:
      - "8001:8000"
    depends_on:
      - db
    env_file:
      - ../.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .:/usr/src/app
volumes:
  postgres: null
  cache:
    driver: local
